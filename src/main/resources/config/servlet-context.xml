<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">
	<!--
	xmlns:oxm="http://www.springframework.org/schema/oxm"
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/mvc/spring-oxm-4.1.xsd">
	-->
	
	<import resource="../batch/batch-context.xml" />
	
	<!-- cglib : @Transactional without interface (put servlet-context for base-package..)  -->
	<tx:annotation-driven proxy-target-class="true" />
	
	<context:component-scan base-package="com.dev.spring" />
	
	<!-- enable autowire -->
	<context:annotation-config />
	
	<!-- Static resources(js, css, images, etc) processing -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/resources/**" location="/resources/" />
    
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />
    
	<!-- Forwards requests to the "/" resource to the "index" view -->
	<!--mvc:view-controller path="/" view-name="index" /-->

	<!-- Interceptors -->
	<mvc:interceptors>
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
		<bean id="baseInterceptor" class="com.dev.spring.system.BaseInterceptor" />
		<!--bean id="webLogInterceptor" class="com.dev.spring.system.WebLogInterceptor" /-->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/*" />
			<mvc:exclude-mapping path="/resources/**" />
			<mvc:exclude-mapping path="/user/pop/*" />
			<mvc:exclude-mapping path="/user/ajax*" />
			<mvc:exclude-mapping path="/batch/**" />
			<bean id="loginInterceptor" class="com.dev.spring.system.LoginInterceptor" />
		</mvc:interceptor>
		<!--mvc:interceptor>
			<mvc:mapping path="/board/*" />
			<bean id="boardInterceptor" class="com.dev.spring.system.BoardInterceptor" />
		</mvc:interceptor-->
	</mvc:interceptors>
	
	<!-- Simple url : view RequestMapping (without.. Controller), method = POST ??
	<mvc:view-controller path="/user/join" view-name="user/user_input" />
	-->
	
	<cache:annotation-driven />
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>
	
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:config/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!--reloadable & jquery.i18n.prorerties 직접 접근(login.js loadMessages)을 위해.. webapp/resources로 이동 (404 error.jsp... exception??)-->
		<property name="basenames">
			<list>
				<value>/resources/messages/message</value>
				<value>/resources/messages/common</value>
			</list>
		</property>
		<property name="cacheSeconds" value="0" /> <!-- Every value Seconds reload.. -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- for .. use java bean (excelView) -->
	<bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource" />
	</bean>
	
	<bean id="message" class="com.dev.spring.common.Global">
		<property name="messageSourceAccessor" ref="messageSourceAccessor" />
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="selectLocale" />
		<property name="cookieMaxAge" value="31536000" /><!-- seconds : 60*60*24*365 -->
	</bean>
	
	<!-- Freemarker config & view resolver -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/views/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="auto_import">spring.ftl as spring</prop>
			</props>
		</property>
		<!--property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape"/>
			</map>
		</property-->
	</bean>
	<!--bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/-->
	
	<bean id="freeMarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="2" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
		<!--property name="defaultEncoding" value="UTF-8" /--> 
	</bean>
	
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="order" value="1" />
		<property name="location" value="classpath:config/jasper-views.xml" />
	</bean>
	
	<!-- *.json, *.xml, *.xlsx, *.pdf ... -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="0" />
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="json" value="application/json" />
								<entry key="xml" value="application/xml" />
								<entry key="xlsx" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" /><!-- call *.xls -->
								<entry key="pdf" value="application/pdf" />
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="contentType" value="application/xml;charset=UTF-8" />
					<constructor-arg>
						<!-- bean class="org.springframework.oxm.castor.CastorMarshaller">
							<property name="mappingLocation" value="classpath:config/castor-mapping.xml" />
						</bean -->
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="autodetectAnnotations" value="true" />
							<!-- property name="encoding" value="UTF-8" / -->
						</bean>
					</constructor-arg>
				</bean>
				<bean class="com.dev.spring.common.util.ExcelView" />
				<bean class="com.dev.spring.common.util.PdfView" />
			</list>
		</property>
	</bean>
	
</beans>